{"version":3,"file":"static/webpack/static/development/pages/_app.js.1d77b1696a204b3138d5.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport factory from \"../ethereum/factoryContract\";\nimport Layout from \"../components/layouts\";\nimport Router from \"next/router\";\nimport { getUserData, login, validate } from \"../services/authentication\";\nimport App, { Container } from \"next/app\";\n\nexport default class MyApp extends App {\n  static async getInitialProps() {\n    const blockchainProjects = await factory.methods\n      .getDeployedCampaigns()\n      .call();\n    return { blockchainProjects };\n  }\n\n  componentDidMount() {\n    const projectsURL = \"http://localhost:3000/projects\";\n    return fetch(projectsURL)\n      .then(resp => resp.json())\n      .then(resp => this.setState({ allProjects: resp }));\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userData: {\n        id: 17,\n        first_name: \"Francisco\",\n        last_name: \"Costa\",\n        email: \"francisco@fcosta.pt\",\n        projects: [\n          {\n            title: \"Test Project\",\n            description:\n              \"This a test project in order to check if the API is working or not. Let's hope it is...\",\n            goal: 1000,\n            status: \"created\"\n          }\n        ]\n      },\n      selectedProject: {},\n      allProjects: {}\n    };\n  }\n\n  loggedIn = token => {\n    localStorage.setItem(\"token\", token);\n    getUserData().then(resp => {\n      this.setState({ userdata: resp });\n    });\n    Router.push(\"/\");\n  };\n\n  logout = () => {\n    this.setState({\n      userdata: {\n        first_name: \"\",\n        last_name: \"\",\n        email: \"\",\n        projects: []\n      }\n    });\n    localStorage.removeItem(\"token\");\n    Router.push(\"/login\");\n  };\n\n  deployProject = project => {\n    this.setState({ allProjects: [...this.state.allProjects, project] });\n  };\n\n  selectProject = project => {\n    this.setState({ selectedProject: project });\n  };\n\n  changeSelectedProject = project => {\n    const address = project.blockchain_address;\n    const status = project.status;\n    const newProject = this.state.selectedProject;\n    newProject.status = status;\n    newProject.blockchain_address = address;\n    this.setState({ selectedProject: newProject });\n  };\n\n  getNewProjectBlockchainAddress = async function() {\n    const blockchainProjects = await factory.methods\n      .getDeployedCampaigns()\n      .call();\n    this.setState({ blockchainProjects: blockchainProjects });\n  };\n\n  render() {\n    const { Component } = this.props;\n    return (\n      <Layout\n        userData={this.state.userData}\n        logout={this.logout}\n        selectProject={this.selectProject}>\n        <Component\n          blockchainProjects={this.props.blockchainProjects}\n          userData={this.state.userData}\n          login={this.loggedIn}\n          selectedProject={this.state.selectedProject}\n          selectProject={this.selectProject}\n          getNewProjectBlockchainAddress={this.getNewProjectBlockchainAddress}\n          allProjects={this.state.allProjects}\n        />\n      </Layout>\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAQA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;AAXA;AACA;;AADA;AAGA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;AASA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAyBA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AA/BA;AAiCA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AACA;AAOA;AACA;AACA;AACA;AA5CA;AA8CA;AAAA;AAAA;AACA;AACA;AAhDA;AAkDA;AAAA;AAAA;AACA;AACA;AApDA;AAsDA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AA7DA;AAAA;AAAA;AAAA;AAAA;AA8DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAGA;AAAA;AAAA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA5DA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AALA;AANA;AAeA;AACA;AAjBA;AAHA;AAsBA;AACA;;;AA8CA;AAAA;AAEA;AAEA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAWA;;;;AAtGA;AACA;;;;;A","sourceRoot":""}