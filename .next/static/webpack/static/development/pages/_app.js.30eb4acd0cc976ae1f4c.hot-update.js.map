{"version":3,"file":"static/webpack/static/development/pages/_app.js.30eb4acd0cc976ae1f4c.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport factory from \"../ethereum/factoryContract\";\nimport Layout from \"../components/layouts\";\nimport Router from \"next/router\";\nimport { getUserData, login, validate } from \"../services/authentication\";\nimport App, { Container } from \"next/app\";\n\nexport default class MyApp extends App {\n  static async getInitialProps() {\n    const blockchainProjects = await factory.methods\n      .getDeployedCampaigns()\n      .call();\n    return { blockchainProjects };\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userData: {\n        id: 15,\n        first_name: \"Francisco\",\n        last_name: \"Costa\",\n        email: \"francisco@fcosta.pt\",\n        projects: [\n          {\n            title: \"Test Project\",\n            description:\n              \"This a test project in order to check if the API is working or not. Let's hope it is...\",\n            goal: 1000,\n            status: \"created\"\n          }\n        ]\n      },\n      selectedProject: {},\n      allProjects: this.props.projects\n    };\n  }\n\n  loggedIn = token => {\n    localStorage.setItem(\"token\", token);\n    getUserData().then(resp => {\n      this.setState({ userdata: resp });\n    });\n    Router.push(\"/\");\n  };\n\n  logout = () => {\n    this.setState({\n      userdata: {\n        first_name: \"\",\n        last_name: \"\",\n        email: \"\",\n        projects: []\n      }\n    });\n    localStorage.removeItem(\"token\");\n    Router.push(\"/login\");\n  };\n\n  deployProject = project => {\n    this.setState({ allProjects: [...this.state.allProjects, project] });\n  };\n\n  selectProject = project => {\n    this.setState({ selectProject: project });\n  };\n\n  render() {\n    const { Component } = this.props;\n    return (\n      <Layout userData={this.state.userData} logout={this.logout}>\n        <Component\n          projects={this.props.projects}\n          userData={this.state.userData}\n          login={this.loggedIn}\n          selectedProject={this.state.selectedProject}\n          select\n        />\n      </Layout>\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AAEA;AACA;;AADA;AAGA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAyBA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AA/BA;AAiCA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AACA;AAOA;AACA;AACA;AACA;AA5CA;AA8CA;AAAA;AAAA;AACA;AACA;AAhDA;AAkDA;AAAA;AAAA;AACA;AACA;AAjDA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AALA;AANA;AAeA;AACA;AAjBA;AAHA;AAsBA;AACA;;;AA8BA;AAAA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;;;;AA1EA;AACA;;;;;A","sourceRoot":""}