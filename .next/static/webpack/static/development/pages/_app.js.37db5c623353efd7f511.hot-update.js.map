{"version":3,"file":"static/webpack/static/development/pages/_app.js.37db5c623353efd7f511.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport factory from \"../ethereum/factoryContract\";\nimport Layout from \"../components/layouts\";\nimport Router from \"next/router\";\nimport { getUserData, login, validate } from \"../services/authentication\";\nimport App, { Container } from \"next/app\";\n\nexport default class MyApp extends App {\n  static async getInitialProps() {\n    const blockchainProjects = await factory.methods\n      .getDeployedCampaigns()\n      .call();\n    return { blockchainProjects };\n  }\n\n  componentDidMount() {\n    if (\n      localStorage.getItem(\"token\") &&\n      localStorage.getItem(\"token\") !== \"undefined\"\n    ) {\n      validate()\n        .then(resp => {\n          this.loggedIn(resp.token);\n        })\n        .catch(err => {\n          alert(err);\n        });\n    } else {\n      Router.push(\"/login\");\n    }\n\n    const projectsURL = \"http://localhost:3000/projects\";\n    return fetch(projectsURL)\n      .then(resp => resp.json())\n      .then(resp => this.setState({ allProjects: resp }));\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userData: {\n        id: 1,\n        first_name: \"Francisco\",\n        last_name: \"Costa\",\n        email: \"francisco@fcosta.pt\",\n        projects: [\n          {\n            title: \"Test Project\",\n            description:\n              \"This a test project in order to check if the API is working or not. Let's hope it is...\",\n            goal: 1000,\n            status: \"created\"\n          },\n          {\n            title: \"Project Title Test\",\n            description: \"lkjhlkjhk\",\n            goal: 456,\n            status: \"deployed\"\n          },\n          {\n            title: \"Project Title Test\",\n            description: \"Codes apps\",\n            goal: 987,\n            status: \"deployed\"\n          },\n          {\n            title: \"Project Title Test\",\n            description: \"passfa\",\n            goal: 123,\n            status: \"deployed\"\n          },\n          {\n            title: \"Fran goes to Disneyland\",\n            description: \"disneyland\",\n            goal: 1000,\n            status: \"deployed\"\n          },\n          {\n            title: \"Fran X Flatiron\",\n            description:\n              \"I would like to do a coding bootcamp. Would you help me?\",\n            goal: 10000,\n            status: \"deployed\"\n          },\n          {\n            title: \"Project Title Test\",\n            description: \"Codes apps\",\n            goal: 987,\n            status: \"created\"\n          },\n          {\n            title: \"Fonfi goes to Turkey\",\n            description: \"I would like to take my brother to Turkey\",\n            goal: 100,\n            status: \"deployed\"\n          }\n        ]\n      },\n      selectedProject: {},\n      allProjects: {}\n    };\n  }\n\n  loggedIn = token => {\n    localStorage.setItem(\"token\", token);\n    getUserData().then(resp => {\n      debugger;\n      this.setState({ userData: resp });\n    });\n    Router.push(\"/\");\n  };\n\n  logout = () => {\n    this.setState({\n      userdata: {}\n    });\n    localStorage.removeItem(\"token\");\n    Router.push(\"/login\");\n  };\n\n  deployProject = project => {\n    this.setState({ allProjects: [...this.state.allProjects, project] });\n  };\n\n  selectProject = project => {\n    this.setState({ selectedProject: project });\n  };\n\n  getNewProjectBlockchainAddress = async function() {\n    const blockchainProjects = await factory.methods\n      .getDeployedCampaigns()\n      .call();\n    this.setState({ blockchainProjects: blockchainProjects });\n  };\n\n  render() {\n    const { Component } = this.props;\n    return (\n      <Layout\n        userData={this.state.userData}\n        logout={this.logout}\n        selectProject={this.selectProject}>\n        <Component\n          blockchainProjects={this.props.blockchainProjects}\n          userData={this.state.userData}\n          login={this.loggedIn}\n          selectedProject={this.state.selectedProject}\n          selectProject={this.selectProject}\n          getNewProjectBlockchainAddress={this.getNewProjectBlockchainAddress}\n          allProjects={this.state.allProjects}\n          changeSelectedProject={this.changeSelectedProject}\n          deployProject={this.deployProject}\n        />\n      </Layout>\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAQA;AAAA;AACA;AAAA;AAIA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;AA1BA;AACA;;AADA;AAGA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;AAwBA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAoEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AA3EA;AA6EA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AAnFA;AAqFA;AAAA;AAAA;AACA;AACA;AAvFA;AAyFA;AAAA;AAAA;AACA;AACA;AA3FA;AAAA;AAAA;AAAA;AAAA;AA4FA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAGA;AAAA;AAAA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA1FA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AALA;AAQA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AAEA;AACA;AALA;AAQA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAlDA;AA0DA;AACA;AA5DA;AAHA;AAiEA;AACA;;;AAiCA;AAAA;AAEA;AAEA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAaA;;;;AArJA;AACA;;;;;A","sourceRoot":""}