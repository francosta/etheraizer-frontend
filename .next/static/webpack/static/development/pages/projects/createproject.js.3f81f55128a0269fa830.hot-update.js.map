{"version":3,"file":"static/webpack/static/development/pages/projects/createproject.js.3f81f55128a0269fa830.hot-update.js","sources":["webpack:///./components/DeployProjectForm.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Button,\n  Checkbox,\n  Form,\n  Input,\n  Dropdown,\n  Message,\n  Segment,\n  Dimmer,\n  Loader,\n  Transition,\n  Step\n} from \"semantic-ui-react\";\nimport factory from \"../ethereum/factoryContract\";\nimport web3 from \"../ethereum/web3\";\n\nexport default class DeployProjectForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      errorMessage: \"\",\n      creatingProject: false,\n      terms: false,\n      projectStatus: \"funded\"\n    };\n  }\n\n  handleCheck = () => {\n    this.setState({ terms: !this.state.terms });\n  };\n\n  // handleSubmit = () => {\n  //   setTimeout(this.props.getNewProjectBlockchainAddress(), 45000);\n  //   this.getAddressForNewProject();\n  // };\n\n  handleSubmit = async e => {\n    e.persist();\n    e.preventDefault();\n\n    if (this.state.terms === false) {\n      return this.setState({\n        errorMessage:\n          \"You need to accept the terms conditions before creating a project.\"\n      });\n    }\n\n    const accounts = await web3.eth.getAccounts();\n    const projectTitle = e.target.projectTitle.value;\n    const minimumContribution = e.target.minimumContribution.value;\n\n    this.setState({ creatingProject: true });\n    try {\n      await factory.methods\n        .createCampaign(minimumContribution)\n        .send({ from: accounts[1], gas: \"1000000\" })\n        .then(resp => console.log(resp));\n      this.getAddressForNewProject();\n    } catch (thrownError) {\n      this.setState({ errorMessage: thrownError.message });\n    }\n    this.setState({ creatingProject: false });\n  };\n\n  getAddressForNewProject = async function() {\n    const addresses = await factory.methods.getDeployedCampaigns().call();\n    let selectedProjectAddress;\n    let project;\n    selectedProjectAddress = addresses[addresses.length - 1];\n    project = this.props.selectedProject;\n    project.blockchain_address = selectedProjectAddress;\n    project.status = \"deployed\";\n    this.props.selectedProject(project);\n    this.updateProjectOnDatabase(project);\n  };\n\n  updateProjectOnDatabase = project => {\n    const updateURL = `http://localhost:3000/projects/${project.id}`;\n    const options = {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(project)\n    };\n\n    return fetch(updateURL, options).then(resp => resp.json());\n  };\n\n  render() {\n    const formOptions = [\n      { key: \"wei\", text: \"wei\", value: \"wei\" },\n      { key: \"ether\", text: \"Îž ether\", value: \"ether\" }\n    ];\n    return (\n      <div>\n        <h2>Deploy your project to the Blockchain</h2>\n        <h3>Your project was created. Now, deploy it to the blockchain.</h3>\n        <div>\n          <h4>Please fill in the form below to deploy your project:</h4>\n          <Segment>\n            <Transition\n              visible={this.state.creatingProject}\n              animation=\"scale\"\n              duration={500}>\n              <Dimmer active={this.state.creatingProject}>\n                <Loader indeterminate>\n                  Attempting to deploy project's contract into the Ethereum\n                  blockchain.\n                  <br />\n                  Please wait...\n                </Loader>\n              </Dimmer>\n            </Transition>\n\n            <Form\n              onSubmit={this.handleSubmit}\n              error={!!this.state.errorMessage}>\n              <Form.Field disabled name=\"projectTitle\">\n                <label>Project Title</label>\n                <Input\n                  name=\"projectTitle\"\n                  value={this.props.selectedProject.title}\n                />\n              </Form.Field>\n              <Form.Field required>\n                <label>Minimum Contribution</label>\n                <Input\n                  name=\"minimumContribution\"\n                  label={<Dropdown defaultValue=\"wei\" options={formOptions} />}\n                  labelPosition=\"right\"\n                  placeholder=\"Minimum Contribution\"\n                />\n              </Form.Field>\n              <Form.Field required>\n                <Checkbox\n                  checked={this.state.terms}\n                  onChange={this.handleCheck}\n                  label=\"I agree to the Terms and Conditions\"\n                />\n              </Form.Field>\n              <Message\n                color=\"red\"\n                size=\"small\"\n                compact\n                warning\n                error\n                header=\"Oh oh!\"\n                content={this.state.errorMessage}\n              />\n              <br />\n              <Button type=\"submit\">Create Project</Button>\n            </Form>\n          </Segment>\n        </div>\n      </div>\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAaA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAYA;AAAA;AAAA;AACA;AACA;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AADA;AAMA;AADA;AACA;AANA;AAAA;AAAA;AACA;AADA;AAWA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAhBA;AAAA;AAAA;AAmBA;AAAA;AAAA;AACA;AAAA;AACA;AArBA;AAqBA;AACA;AAtBA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAsBA;AAAA;AAAA;AACA;AAxBA;AAyBA;AAAA;AAAA;AACA;AA1BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AArBA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAgDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAjDA;AA6DA;AACA;AACA;AACA;AACA;AADA;AAGA;AALA;AAQA;AAAA;AAAA;AACA;AACA;AArEA;AACA;AACA;AACA;AACA;AAJA;AAHA;AASA;AACA;;;AA+DA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAQA;AACA;AACA;AAHA;AAIA;AAAA;AACA;AAAA;AAUA;AACA;AAFA;AAGA;AAAA;AAAA;AAGA;AACA;AAFA;AAKA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAJA;AAOA;AAAA;AAEA;AACA;AACA;AAHA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AAAA;AAMA;;;;AA9IA;AACA;;;;;A","sourceRoot":""}