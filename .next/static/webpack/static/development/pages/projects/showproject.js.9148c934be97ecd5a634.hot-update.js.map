{"version":3,"file":"static/webpack/static/development/pages/projects/showproject.js.9148c934be97ecd5a634.hot-update.js","sources":["webpack:///./pages/projects/showproject.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport ProjectProgress from \"../../components/ProjectProgress\";\nimport AchieveProjectForm from \"../../components/AchieveProjectForm\";\nimport { Button, Grid } from \"semantic-ui-react\";\nimport ProjectDetails from \"../../components/ProjectDetails\";\nimport projectContract from \"../../ethereum/projectContract\";\nimport web3 from \"../../ethereum/web3\";\nimport ProjectStats from \"../../components/ProjectStats\";\nimport ProjectCreationProgressComponent from \"../../components/ProjectCreationProgressComponent\";\nimport ProjectHighLevelValues from \"../../components/ProjectHighLevelValues\";\nimport ContributeForm from \"../../components/ContributeForm\";\nimport ProjectPresentation from \"../../components/ProjectPresentation\";\nimport Router from \"next/router\";\n\nexport default class ShowProject extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      edit: false,\n      minimumContribution: null,\n      balance: null,\n      requestsCount: null,\n      supportersCount: null,\n      managerAddress: \"\"\n    };\n  }\n\n  componentDidMount = async function() {\n    if (Object.keys(this.props.selectedProject).length !== 0) {\n      const address = this.props.selectedProject.blockchain_address;\n      const project = projectContract(address);\n      const stats = await project.methods.getSummary().call();\n      this.setState({\n        minimumContribution: parseInt(stats[0][\"_hex\"]),\n        balance: parseInt(stats[1][\"_hex\"]),\n        requestsCount: parseInt(stats[2][\"_hex\"]),\n        supportersCount: parseInt(stats[3][\"_hex\"]),\n        managerAddress: stats[4]\n      });\n    } else {\n      const projectId = parseInt(this.props.router.query.id);\n      const projectToSelect = this.props.allProjects.filter(\n        project => project.id === projectId\n      )[0];\n      this.props.selectProject(projectToSelect);\n      const address = projectToSelect.blockchain_address;\n      const project = projectContract(address);\n      const stats = await project.methods.getSummary().call();\n      this.setState({\n        minimumContribution: parseInt(stats[0][\"_hex\"]),\n        balance: parseInt(stats[1][\"_hex\"]),\n        requestsCount: parseInt(stats[2][\"_hex\"]),\n        supportersCount: parseInt(stats[3][\"_hex\"]),\n        managerAddress: stats[4]\n      });\n    }\n  };\n\n  updateDataOnFrontend = contribution => {\n    this.setState({\n      supportersCount: this.state.supportersCount + 1,\n      balance: this.state.balance + contribution\n    });\n  };\n\n  getContractWithState = async function() {};\n\n  handleClick = () => {\n    this.setState({ edit: !this.state.edit });\n  };\n\n  render() {\n    return (\n      <div style={{ marginTop: \"20px\" }}>\n        <Grid>\n          <Grid.Row columns={2}>\n            <Grid.Column width={10} floated=\"left\">\n              <h1>{`Project Name: ${this.props.selectedProject.title}`}</h1>\n            </Grid.Column>\n            {this.props.userData.id ? (\n              <Grid.Column width={4} floated=\"right\">\n                <ContributeForm\n                  balance={this.state.balance}\n                  supportersCount={this.state.supportersCount}\n                  userData={this.props.userData}\n                  minimumContribution={this.state.minimumContribution}\n                  selectedProject={this.props.selectedProject}\n                  updateDataOnFrontend={this.updateDataOnFrontend}\n                  selectProject={this.props.selectProject}\n                  addToUserSupportedProjects={\n                    this.props.addToUserSupportedProjects\n                  }\n                />\n              </Grid.Column>\n            ) : (\n              <Button onClick={Router.push(\"/login\")}>Login to support></Button>\n            )}\n          </Grid.Row>\n        </Grid>\n        <br />\n        <ProjectCreationProgressComponent\n          selectedProject={this.props.selectedProject}\n        />\n        <ProjectHighLevelValues\n          balance={this.state.balance}\n          goal={this.props.selectedProject.goal}\n          noSupporters={this.state.supportersCount}\n          selectedProject={this.props.selectedProject}\n        />\n        <br />\n        <ProjectProgress\n          goal={this.props.selectedProject.goal}\n          progress={this.props.selectedProject.progress}\n        />\n        <br />\n        <ProjectStats\n          selectedProject={this.props.selectedProject}\n          minimumContribution={this.state.minimumContribution}\n          manager={this.state.managerAddress}\n          balance={this.state.balance}\n          requestsCount={this.state.requestsCount}\n          approversCount={this.state.approversCount}\n        />\n        <br />\n        <br />\n        <br />\n        <ProjectPresentation selectedProject={this.props.selectedProject} />\n        <br />\n        {!this.state.edit ? (\n          <div>\n            {this.props.selectedProject.user_id === this.props.userData.id ? (\n              <Button onClick={this.handleClick} type=\"submit\">\n                Edit Project\n              </Button>\n            ) : null}\n          </div>\n        ) : (\n          <div>\n            <AchieveProjectForm\n              active={this.state.edit}\n              selectedProject={this.props.selectedProject}\n              selectProject={this.props.selectProject}\n              changeEdit={this.handleClick}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AALA;AAAA;AACA;AADA;AAaA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAnBA;AAAA;AACA;AADA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAdA;AA6CA;AACA;AACA;AAFA;AAIA;AACA;AAlDA;AAAA;AAAA;AAAA;AAAA;AAmDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AApDA;AAsDA;AAAA;AAAA;AACA;AACA;AArDA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAHA;AAWA;AACA;;;AA6CA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAIA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAcA;AAAA;AAMA;AADA;AAIA;AACA;AACA;AACA;AAJA;AAQA;AACA;AAFA;AAMA;AACA;AACA;AACA;AACA;AACA;AANA;AAWA;AAAA;AAKA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AAJA;AAUA;;;;AAvIA;AACA;;;;;A","sourceRoot":""}