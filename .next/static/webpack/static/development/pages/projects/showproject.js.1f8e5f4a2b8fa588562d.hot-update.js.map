{"version":3,"file":"static/webpack/static/development/pages/projects/showproject.js.1f8e5f4a2b8fa588562d.hot-update.js","sources":["webpack:///./pages/projects/showproject.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport ProjectProgress from \"../../components/ProjectProgress\";\nimport AchieveProjectForm from \"../../components/AchieveProjectForm\";\nimport { Button, Grid } from \"semantic-ui-react\";\nimport ProjectDetails from \"../../components/ProjectDetails\";\nimport projectContract from \"../../ethereum/projectContract\";\nimport web3 from \"../../ethereum/web3\";\nimport ProjectStats from \"../../components/ProjectStats\";\nimport ProjectCreationProgressComponent from \"../../components/ProjectCreationProgressComponent\";\nimport ProjectHighLevelValues from \"../../components/ProjectHighLevelValues\";\nimport ContributeForm from \"../../components/ContributeForm\";\nimport ProjectPresentation from \"../../components/ProjectPresentation\";\n\nexport default class ShowProject extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      edit: false,\n      minimumContribution: null,\n      balance: null,\n      requestsCount: null,\n      supportersCount: null,\n      managerAddress: \"\"\n    };\n  }\n\n  componentDidMount = async function() {\n    const address = this.props.selectedProject.blockchain_address;\n    const project = projectContract(address);\n    const stats = await project.methods.getSummary().call();\n    this.setState({\n      minimumContribution: parseInt(stats[0][\"_hex\"]),\n      balance: parseInt(stats[1][\"_hex\"]),\n      requestsCount: parseInt(stats[2][\"_hex\"]),\n      supportersCount: parseInt(stats[3][\"_hex\"]),\n      managerAddress: stats[4]\n    });\n  };\n\n  updateDataOnFrontend = contribution => {\n    this.setState({\n      supportersCount: this.state.supportersCount + 1,\n      balance: this.state.balance + contribution\n    });\n  };\n\n  getContractWithState = async function() {};\n\n  handleClick = () => {\n    this.setState({ edit: !this.state.edit });\n  };\n\n  render() {\n    return (\n      <div>\n        <Grid>\n          <Grid.Row columns={2}>\n            <Grid.Column floated=\"left\">\n              <h1>{`Project Name: ${this.props.selectedProject.title}`}</h1>\n            </Grid.Column>\n            <Grid.Column floated=\"right\">\n              <ContributeForm\n                balance={this.state.balance}\n                supportersCount={this.state.supportersCount}\n                userData={this.props.userData}\n                minimumContribution={this.state.minimumContribution}\n                selectedProject={this.props.selectedProject}\n                updateDataOnFrontend={this.updateDataOnFrontend}\n                selectProject={this.props.selectProject}\n              />\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n        <br />\n        {/* {this.props.selectedProject.user_id === this.props.userData.id ? ( */}\n        <ProjectCreationProgressComponent\n          selectedProject={this.props.selectedProject}\n        />\n        <ProjectHighLevelValues\n          balance={this.state.balance}\n          goal={this.props.selectedProject.goal}\n          noSupporters={this.state.supportersCount}\n          selectedProject={this.props.selectedProject}\n        />\n        <br />\n        <ProjectProgress\n          goal={this.props.selectedProject.goal}\n          progress={this.props.selectedProject.progress}\n        />\n        <br />\n        <ProjectStats\n          selectedProject={this.props.selectedProject}\n          minimumContribution={this.state.minimumContribution}\n          manager={this.state.managerAddress}\n          balance={this.state.balance}\n          requestsCount={this.state.requestsCount}\n          approversCount={this.state.approversCount}\n        />\n        <br />\n        <br />\n        <br />\n        <ProjectPresentation selectedProject={this.props.selectedProject} />\n        <br />\n        {!this.state.edit ? (\n          <div>\n            <Button onClick={this.handleClick} type=\"submit\">\n              Edit Project\n            </Button>{\" \"}\n          </div>\n        ) : (\n          <div>\n            <AchieveProjectForm\n              active={this.state.edit}\n              selectedProject={this.props.selectedProject}\n              selectProject={this.props.selectProject}\n              changeEdit={this.handleClick}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAdA;AA2BA;AACA;AACA;AAFA;AAIA;AACA;AAhCA;AAAA;AAAA;AAAA;AAAA;AAiCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAlCA;AAoCA;AAAA;AAAA;AACA;AACA;AAnCA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAHA;AAWA;AACA;;;AA2BA;AACA;AAGA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAeA;AADA;AAIA;AACA;AACA;AACA;AAJA;AAQA;AACA;AAFA;AAMA;AACA;AACA;AACA;AACA;AACA;AANA;AAWA;AAAA;AAIA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAJA;AAUA;;;;AA7GA;AACA;;;;;A","sourceRoot":""}