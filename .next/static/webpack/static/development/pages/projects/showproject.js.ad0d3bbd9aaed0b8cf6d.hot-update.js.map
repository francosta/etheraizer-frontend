{"version":3,"file":"static/webpack/static/development/pages/projects/showproject.js.ad0d3bbd9aaed0b8cf6d.hot-update.js","sources":["webpack:///./components/ProjectDetails.js","webpack:///./ethereum/projectContract.js","webpack:///./pages/projects/showproject.js"],"sourcesContent":["import React from \"react\";\nimport { Item } from \"semantic-ui-react\";\n\nexport default function ProjectDetails(props) {\n  return (\n    <Item.Group>\n      <Item>\n        <Item.Image\n          size=\"small\"\n          src=\"https://react.semantic-ui.com/images/wireframe/image.png\"\n        />\n\n        <Item.Content>\n          <Item.Header as=\"a\">Description</Item.Header>\n          <Item.Description>\n            <p>{props.selectedProject.description}</p>\n          </Item.Description>\n        </Item.Content>\n      </Item>\n\n      <Item>\n        <Item.Image\n          size=\"small\"\n          src=\"https://react.semantic-ui.com/images/wireframe/image.png\"\n        />\n\n        <Item.Content>\n          <Item.Header as=\"a\">Blockchain Address</Item.Header>\n          <Item.Description\n            content={props.selectedProject.blockchain_address}\n          />\n        </Item.Content>\n      </Item>\n\n      <Item>\n        <Item.Image\n          size=\"small\"\n          src=\"https://react.semantic-ui.com/images/wireframe/image.png\"\n        />\n        <Item.Content header=\"Goal\" description={props.selectedProject.goal} />\n      </Item>\n    </Item.Group>\n  );\n}\n","import web3 from \"./web3\";\nimport Fundraise from \"./build/Fundraise.json\";\n\n// This is a function that will create a 'Fundraise' contract for each address that it's passed onto it\nexport default address => {\n  return new web3.eth.Contract(JSON.parse(Fundraise.interface), address);\n};\n","import React, { Component } from \"react\";\nimport ProjectProgress from \"../../components/ProjectProgress\";\nimport AchieveProjectForm from \"../../components/AchieveProjectForm\";\nimport { Button } from \"semantic-ui-react\";\nimport ProjectDetails from \"../../components/ProjectDetails\";\nimport projectContract from \"../../ethereum/projectContract\";\nimport web3 from \"../../ethereum/web3\";\nimport ProjectStats from \"../../components/ProjectStats\";\nimport ProjectCreationProgressComponent from \"../../components/ProjectCreationProgressComponent\";\nimport ProjectHighLevelValues from \"../../components/ProjectHighLevelValues\";\n\nexport default class ShowProject extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      edit: false,\n      minimumContribution: null,\n      balance: null,\n      requestsCount: null,\n      supportersCount: null,\n      managerAddress: \"\"\n    };\n  }\n\n  componentDidMount = async function() {\n    // const address = this.props.selectedProject.blockchain_address;\n    const stats = await projectcontract.methods.getSummary().call();\n    this.setState({\n      minimumContribution: parseInt(stats[0][\"_hex\"]),\n      balance: parseInt(stats[1][\"_hex\"]),\n      requestsCount: parseInt(stats[2][\"_hex\"]),\n      supportersCount: parseInt(stats[3][\"_hex\"]),\n      managerAddress: stats[4]\n    });\n  };\n\n  handleClick = () => {\n    this.setState({ edit: !this.state.edit });\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>{`Project Name: ${this.props.selectedProject.title}`}</h1>\n        <br />\n        {this.props.selectedProject.user_id === this.props.userData.id ? (\n          <ProjectCreationProgressComponent\n            selectedProject={this.props.selectedProject}\n          />\n        ) : null}\n        <br />\n        <ProjectHighLevelValues\n          balance={this.state.balance}\n          goal={this.props.selectedProject.goal}\n          noSupporters={this.state.supportersCount}\n          selectedProject={this.props.selectedProject}\n        />\n        <br />\n        <ProjectProgress\n          goal={this.props.selectedProject.goal}\n          progress={this.props.selectedProject.progress}\n        />\n        <br />\n        <ProjectStats\n          selectedProject={this.props.selectedProject}\n          minimumContribution={this.state.minimumContribution}\n          manager={this.state.managerAddress}\n          balance={this.state.balance}\n          requestsCount={this.state.requestsCount}\n          approversCount={this.state.approversCount}\n        />\n        <br />\n        {!this.state.edit ? (\n          <div>\n            <Button onClick={this.handleClick} type=\"submit\">\n              Edit Project\n            </Button>{\" \"}\n          </div>\n        ) : (\n          <div>\n            <AchieveProjectForm\n              active={this.state.edit}\n              selectedProject={this.props.selectedProject}\n              selectProject={this.props.selectProject}\n              changeEdit={this.handleClick}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAIA;AACA;AAFA;AAMA;AAAA;AASA;AACA;AAFA;AAMA;AAAA;AAEA;AADA;AAQA;AACA;AAFA;AAIA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;AC3CA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAdA;AA0BA;AAAA;AAAA;AACA;AACA;AAzBA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAHA;AAWA;AACA;;;AAiBA;AACA;AAMA;AADA;AAMA;AACA;AACA;AACA;AAJA;AAQA;AACA;AAFA;AAMA;AACA;AACA;AACA;AACA;AACA;AANA;AAWA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAJA;AAUA;;;;AAhFA;AACA;;;;;A","sourceRoot":""}