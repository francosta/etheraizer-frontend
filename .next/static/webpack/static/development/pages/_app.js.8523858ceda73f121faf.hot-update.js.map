{"version":3,"file":"static/webpack/static/development/pages/_app.js.8523858ceda73f121faf.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport factory from \"../ethereum/factoryContract\";\nimport Layout from \"../components/layouts\";\nimport Router from \"next/router\";\nimport { getUserData, login, validate } from \"../services/authentication\";\nimport Index from \"./index\";\nimport Login from \"./login\";\nimport App, { Container } from \"next/app\";\n\nexport default class MyApp extends App {\n  static async getInitialProps() {\n    const projects = await factory.methods.getDeployedCampaigns().call();\n    return { projects };\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userdata: {\n        first_name: \"Francisco\",\n        last_name: \"Costa\",\n        email: \"francisco@fcosta.pt\",\n        projects: [\n          {\n            title: \"Test Project\",\n            description:\n              \"This a test project in order to check if the API is working or not. Let's hope it is...\",\n            goal: 1000,\n            status: \"created\"\n          }\n        ]\n      }\n    };\n  }\n\n  loggedIn = token => {\n    localStorage.setItem(\"token\", token);\n    getUserData().then(resp => {\n      this.setState({ userdata: resp });\n    });\n    Router.push(\"/\");\n  };\n\n  logout = () => {\n    this.setState({\n      userData: {\n        email: \"\",\n        name: \"\",\n        portfolios: [],\n        profile_picture: \"\"\n      }\n    });\n    localStorage.removeItem(\"token\");\n  };\n\n  render() {\n    const { Component } = this.props;\n    if (\n      this.state.userdata ===\n      {\n        first_name: \"\",\n        last_name: \"\",\n        email: \"\",\n        projects: []\n      }\n    ) {\n      return <Login loggedIn={this.loggedIn} />;\n    } else {\n      return (\n        <Component\n          projects={this.props.projects}\n          userData={this.state.userdata}\n        />\n      );\n    }\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AAEA;AACA;;AADA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAsBA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AA5BA;AA8BA;AACA;AACA;AACA;AACA;AACA;AAJA;AADA;AACA;AAOA;AACA;AACA;AArCA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AALA;AALA;AADA;AAHA;AAmBA;AACA;;;AAqBA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AAJA;AAOA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;;;;AAnEA;AACA;;;;;A","sourceRoot":""}