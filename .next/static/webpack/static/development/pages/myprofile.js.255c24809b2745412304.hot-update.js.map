{"version":3,"file":"static/webpack/static/development/pages/myprofile.js.255c24809b2745412304.hot-update.js","sources":["webpack:///./pages/myprofile.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { Grid, Header, Item, Container, Button, Card } from \"semantic-ui-react\";\nimport { Link } from \"../routes\";\nimport Router from \"next/router\";\nimport UserProfile from \"../components/UserProfile\";\nimport ProjectCard from \"../components/ProjectCard\";\n\nexport default class myprofile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      edit: false\n    };\n  }\n\n  render() {\n    return (\n      <div style={{ marginTop: \"20px\" }}>\n        <div>\n          <Header size=\"huge\">My Profile</Header>\n          <UserProfile\n            style={{ marginTop: 20 }}\n            userData={this.props.userData}\n          />\n          <br />\n          <Header size=\"large\">My Projects</Header>\n          <br />\n          <Grid columns=\"three\" divided>\n            <Grid.Column>\n              <Header as=\"h2\" icon=\"road\" content=\"Created Projects\" />\n              <br />\n              {this.props.userData.created_projects.length > 0 ? (\n                <Grid.Row>\n                  <Item.Group link>\n                    <Item>\n                      <Item.Image\n                        size=\"tiny\"\n                        src={\n                          this.props.userData.created_projects[\n                            this.props.userData.created_projects.length - 1\n                          ].image\n                        }\n                      />\n\n                      <Item.Content>\n                        <Item.Header>\n                          {\n                            this.props.userData.created_projects[\n                              this.props.userData.created_projects.length - 1\n                            ].title\n                          }\n                        </Item.Header>\n                        <Item.Description>\n                          {\n                            this.props.userData.created_projects[\n                              this.props.userData.created_projects.length - 1\n                            ].description\n                          }\n                          }\n                        </Item.Description>\n                      </Item.Content>\n                    </Item>\n                    {this.props.userData.created_projects.length > 1 ? (\n                      <Button primary>See More</Button>\n                    ) : null}\n                  </Item.Group>\n                </Grid.Row>\n              ) : (\n                <Container fluid>\n                  <Header as=\"h2\">No created projects</Header>\n                  <p>You don't have any created projects.</p>\n                </Container>\n              )}\n            </Grid.Column>\n            <Grid.Column>\n              <Header as=\"h2\" icon=\"plug\" content=\"Deployed Projects\" />\n              <br />\n              {this.props.userData.deployed_projects.length > 0 ? (\n                <Grid.Row>\n                  <Item.Group link>\n                    <Item>\n                      <Item.Image\n                        size=\"tiny\"\n                        src={\n                          this.props.userData.deployed_projects[\n                            this.props.userData.deployed_projects.length - 1\n                          ].image\n                        }\n                      />\n\n                      <Item.Content>\n                        <Item.Header>\n                          {\n                            this.props.userData.deployed_projects[\n                              this.props.userData.deployed_projects.length - 1\n                            ].title\n                          }\n                        </Item.Header>\n                        <Item.Description>\n                          {`${this.props.userData.deployed_projects[\n                            this.props.userData.deployed_projects.length - 1\n                          ].description.substring(0, 100)}` + \"...\"}\n                        </Item.Description>\n                      </Item.Content>\n                    </Item>\n                    {this.props.userData.deployed_projects.length > 1 ? (\n                      <Button primary>See More</Button>\n                    ) : null}\n                  </Item.Group>\n                </Grid.Row>\n              ) : (\n                <Container fluid>\n                  <Header as=\"h2\">No funded projects</Header>\n                  <p>You don't have any funded projects.</p>\n                </Container>\n              )}\n            </Grid.Column>\n          </Grid>\n          <br />\n          <br />\n          <Header as=\"h2\" icon=\"heart\" content=\"Project's I've supported\" />\n          <br />\n          <Card.Group itemsPerRow={4}>\n            {this.props.userSupport.map((project, i) => (\n              <ProjectCard\n                key={i}\n                project={project}\n                selectProject={this.props.selectProject}\n              />\n            ))}\n          </Card.Group>\n        </div>\n      </div>\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AADA;AAHA;AAMA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AAAA;AACA;AAFA;AAKA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAIA;AAAA;AAGA;AACA;AAFA;AA4BA;AAAA;AAKA;AAAA;AACA;AAAA;AAMA;AAAA;AAAA;AAAA;AAIA;AAAA;AAGA;AACA;AAFA;AAyBA;AAAA;AAKA;AAAA;AACA;AAAA;AAQA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AAHA;AADA;AAWA;;;;AAhIA;AACA;;;;;A","sourceRoot":""}