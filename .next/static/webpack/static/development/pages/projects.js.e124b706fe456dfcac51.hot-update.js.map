{"version":3,"file":"static/webpack/static/development/pages/projects.js.e124b706fe456dfcac51.hot-update.js","sources":["webpack:///./pages/projects/index.js"],"sourcesContent":["import React, { Component, createRef } from \"react\";\nimport factory from \"../../ethereum/factoryContract\";\nimport Layout from \"../../components/layouts\";\nimport { Card, Sticky, Grid, Ref, Segment, Checkbox } from \"semantic-ui-react\";\nimport { Link } from \"../../routes\";\nimport ProjectCard from \"../../components/ProjectCard\";\n\nexport default class ProjectIndex extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      filteredProjects: [],\n      projects: [],\n      filter: null\n    };\n  }\n\n  componentDidMount() {\n    const projects = this.props.allProjects.filter(\n      project => project.status === \"deployed\" || project.status === \"funded\"\n    );\n    this.setState({ projects: projects });\n    this.setState({ filteredProjects: projects });\n  }\n\n  setProjects = projects => {\n    this.setState({ allprojects: projects });\n  };\n\n  handleSearch = e => {\n    const searchTerm = e.target.value.toLowerCase();\n    const newProjects = this.props.allProjects.filter(project =>\n      project.title.toLowerCase().includes(searchTerm)\n    );\n    this.setState({ filteredProjects: newProjects });\n  };\n\n  handleFilter = filter => {\n    this.setState({ filter: filter });\n  };\n\n  contextRef = createRef();\n\n  render() {\n    return (\n      <div style={{ marginTop: \"20px\" }}>\n        <h1>All Projects</h1>\n        <Grid stackable columns={2}>\n          <Grid.Column width={4}>\n            <Sticky context={this.contextRef}>\n              <div\n                className=\"ui vertical menu left floated\"\n                style={{ marginTop: 20 }}>\n                <div className=\"item\">\n                  <div className=\"ui input\">\n                    <input\n                      onChange={this.handleSearch}\n                      type=\"text\"\n                      placeholder=\"Search...\"\n                    />\n                  </div>\n                </div>\n                <div className=\"item\">\n                  See only\n                  <div className=\"menu\">\n                    <Checkbox\n                      className=\"\"\n                      label={{ children: \"Awaiting funding\" }}\n                      onClick={() => this.handleFilter(\"funding\")}\n                    />\n                    <a\n                      className=\"item\"\n                      onClick={() => this.handleFilter(\"funded\")}>\n                      Funded\n                    </a>\n                  </div>\n                </div>\n                <div className=\"item\">\n                  Sort By\n                  <div className=\"menu\">\n                    <a className=\"item\">Supporters</a>\n                    <a className=\"item\">Backing</a>\n                  </div>\n                </div>\n              </div>\n            </Sticky>\n          </Grid.Column>\n          <Grid.Column stackable width={12}>\n            <Card.Group itemsPerRow={3}>\n              {this.state.filteredProjects.map((project, i) => (\n                <ProjectCard\n                  key={i}\n                  project={project}\n                  selectProject={this.props.selectProject}\n                />\n              ))}\n            </Card.Group>\n          </Grid.Column>\n        </Grid>\n      </div>\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAmBA;AAAA;AAAA;AACA;AACA;AArBA;AAuBA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AA7BA;AA+BA;AAAA;AAAA;AACA;AACA;AAjCA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAHA;AAQA;AACA;;;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;;;AAoBA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAFA;AAGA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAOA;AAAA;AAEA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AAMA;AACA;AAAA;AAAA;AAFA;AAOA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAMA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAHA;AADA;AAYA;;;;AA/FA;AACA;;;;;A","sourceRoot":""}