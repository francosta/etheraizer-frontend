{"version":3,"file":"static/webpack/static/development/pages/myprofile.js.6a3521b79d72143dc3c4.hot-update.js","sources":["webpack:///./pages/myprofile.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { Grid, Header, Item, Container, Button, Card } from \"semantic-ui-react\";\nimport UserProfile from \"../components/UserProfile\";\nimport ProjectCard from \"../components/ProjectCard\";\n\nexport default class myprofile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mySupport: []\n    };\n  }\n\n  componentDidMount() {\n    const myContracts = this.props.supportContracts.filter(\n      contract => contract.user_id === this.props.userData.id\n    );\n\n    const myProjects = myContracts\n      .map(contract => {\n        return this.props.allProjects.filter(project => {\n          return contract.project_id === project.id;\n        });\n      })\n      .flat();\n\n    this.setState({ mySupport: myProjects });\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          <Header size=\"huge\">My Profile</Header>\n          <br />\n          <UserProfile userData={this.props.userData} />\n          <br />\n          <Header size=\"large\">My Projects</Header>\n          <br />\n          <Grid columns=\"three\" divided>\n            <Grid.Column>\n              <Header as=\"h2\" icon=\"road\" content=\"Created Projects\" />\n              <br />\n              {this.props.userData.created_projects.length > 0 ? (\n                <Grid.Row>\n                  <Item.Group link>\n                    <Item>\n                      <Item.Image\n                        size=\"tiny\"\n                        src={\n                          this.props.userData.created_projects[\n                            this.props.userData.created_projects.length - 1\n                          ].image\n                        }\n                      />\n\n                      <Item.Content>\n                        <Item.Header>\n                          {\n                            this.props.userData.created_projects[\n                              this.props.userData.created_projects.length - 1\n                            ].title\n                          }\n                        </Item.Header>\n                        <Item.Description>\n                          {\n                            this.props.userData.created_projects[\n                              this.props.userData.created_projects.length - 1\n                            ].description\n                          }\n                          }\n                        </Item.Description>\n                      </Item.Content>\n                    </Item>\n                    {this.props.userData.created_projects.length > 1 ? (\n                      <Button primary>See More</Button>\n                    ) : null}\n                  </Item.Group>\n                </Grid.Row>\n              ) : (\n                <Container fluid>\n                  <Header as=\"h2\">No created projects</Header>\n                  <p>You don't have any created projects.</p>\n                </Container>\n              )}\n            </Grid.Column>\n            <Grid.Column>\n              <Header as=\"h2\" icon=\"plug\" content=\"Deployed Projects\" />\n              <br />\n              {this.props.userData.deployed_projects.length > 0 ? (\n                <Grid.Row>\n                  <Item.Group link>\n                    <Item>\n                      <Item.Image\n                        size=\"tiny\"\n                        src={\n                          this.props.userData.deployed_projects[\n                            this.props.userData.deployed_projects.length - 1\n                          ].image\n                        }\n                      />\n\n                      <Item.Content>\n                        <Item.Header>\n                          {\n                            this.props.userData.deployed_projects[\n                              this.props.userData.deployed_projects.length - 1\n                            ].title\n                          }\n                        </Item.Header>\n                        <Item.Description>\n                          {`${this.props.userData.deployed_projects[\n                            this.props.userData.deployed_projects.length - 1\n                          ].description.substring(0, 100)}` + \"...\"}\n                        </Item.Description>\n                      </Item.Content>\n                    </Item>\n                    {this.props.userData.deployed_projects.length > 1 ? (\n                      <Button primary>See More</Button>\n                    ) : null}\n                  </Item.Group>\n                </Grid.Row>\n              ) : (\n                <Container fluid>\n                  <Header as=\"h2\">No funded projects</Header>\n                  <p>You don't have any funded projects.</p>\n                </Container>\n              )}\n            </Grid.Column>\n          </Grid>\n          <br />\n          <br />\n          <Header as=\"h2\" icon=\"heart\" content=\"Project's I've supported\" />\n          <br />\n          <Card.Group itemsPerRow={5}>\n            {this.state.mySupport.map((project, i) => (\n              <ProjectCard key={i} project={project} />\n            ))}\n          </Card.Group>\n        </div>\n      </div>\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AADA;AAHA;AAMA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AACA;;;AAEA;AACA;AAGA;AAAA;AAEA;AAAA;AAEA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAIA;AAAA;AAGA;AACA;AAFA;AA4BA;AAAA;AAKA;AAAA;AACA;AAAA;AAMA;AAAA;AAAA;AAAA;AAIA;AAAA;AAGA;AACA;AAFA;AAyBA;AAAA;AAKA;AAAA;AACA;AAAA;AAQA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AADA;AAOA;;;;AA1IA;AACA;;;;;A","sourceRoot":""}