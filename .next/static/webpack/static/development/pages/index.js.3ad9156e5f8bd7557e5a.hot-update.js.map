{"version":3,"file":"static/webpack/static/development/pages/index.js.3ad9156e5f8bd7557e5a.hot-update.js","sources":["webpack:///./components/Navbar.js","webpack:///./components/layouts.js","webpack:///./ethereum/factoryContract.js","webpack:///./ethereum/web3.js","webpack:///./pages/login.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { Menu, Image, Segment } from \"semantic-ui-react\";\nimport { Link } from \"../routes\";\nimport Routes from \"next-routes\";\nimport Router from \"next/router\";\n\nexport default class Navbar extends Component {\n  state = { activeItem: \"home\" };\n\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name });\n\n  createProject = () => {\n    const project = {};\n    this.props.selectProject(project);\n  };\n\n  render() {\n    const { activeItem } = this.state;\n\n    return (\n      <div>\n        <Menu pointing secondary style={{ marginTop: \"20px\" }}>\n          <Menu.Menu position=\"left\" style={{ marginLeft: \"100px\" }}>\n            <Link route=\"/\">\n              <a className=\"item\">\n                <Image\n                  src={\n                    \"https://drive.google.com/uc?export=download&id=1Gr9jldMohwpSwJ8530JBtzv2BDGdaGRu\"\n                  }\n                  style={{ width: \"100px\" }}\n                />\n              </a>\n            </Link>\n            <Link route=\"/projects/index\">\n              <a className=\"item\">Projects</a>\n            </Link>\n            <Link route=\"/projects/createproject\">\n              <a className=\"item\" onClick={this.createProject}>\n                Create Project\n              </a>\n            </Link>\n          </Menu.Menu>\n          <Menu.Menu position=\"right\">\n            <Menu.Item\n              name=\"my projects\"\n              active={activeItem === \"my projects\"}\n              onClick={this.handleItemClick}\n            />\n            <Menu.Item\n              name=\"my profile\"\n              active={activeItem === \"my profile\"}\n              onClick={this.handleItemClick}\n            />\n            <Menu.Item\n              style={{ marginRight: \"100px\" }}\n              name=\"logout\"\n              active={activeItem === \"logout\"}\n              onClick={this.props.logout}\n            />\n          </Menu.Menu>\n        </Menu>\n        <br />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Navbar from \"./Navbar\";\nimport Footer from \"./Footer\";\nimport { Container } from \"semantic-ui-react\";\nimport Head from \"next/head\";\n\nexport default props => {\n  if (props.userData.first_name === \"\") {\n    return (\n      // We use container in order to limit the size of the elements in the window.\n      // We will put the CSS stylesheet link within the head so that it stays in the head of the HTML file.\n      <div>\n        <Head>\n          <link\n            rel=\"stylesheet\"\n            href=\"//cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.2.12/semantic.min.css\"\n          />\n        </Head>\n        <Container>{props.children}</Container>\n      </div>\n    );\n  } else {\n    return (\n      // We use container in order to limit the size of the elements in the window.\n      // We will put the CSS stylesheet link within the head so that it stays in the head of the HTML file.\n      <div>\n        <Head>\n          <link\n            rel=\"stylesheet\"\n            href=\"//cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.2.12/semantic.min.css\"\n          />\n        </Head>\n        <Navbar logout={props.logout} selectProject={props.selectProject} />\n        <Container>{props.children}</Container>\n        <Footer />\n      </div>\n    );\n  }\n};\n","// This file has the goal of creating a javascript instance of the deployed contract.\n// After this is setup we can just import it into any other file and use it as if it were a js class with all the methods available to us.\n\n// Get created instance of web3\nimport web3 from \"./web3\";\n\n//Get deployed contract's ABI\nimport ProjectFactory from \"./build/CampaignFactory.json\";\n\n// Create an instance of the contract with the deployed contract's address\nconst contractInstance = new web3.eth.Contract(\n  JSON.parse(ProjectFactory.interface),\n  \"0xD474898217b36829585E4261080e4eEb2E9c676A\"\n);\n\nexport default contractInstance;\n","//Configure and create an instance of web3 by finding which provider we will use.\n// The goal of this file is to have web3 = new Web3(PROVIDER_WHICH_WE_WILL_FIND)\nimport Web3 from \"web3\";\n\n// Initialize the web3 variable.\nlet web3;\n\n// To define where we will get the instance of web3 from (server or browser), we need to check whether the code is running on the browser or the server and then, if it is running on the browser, if Metamask exists and is already injecting web3 in the browser.\n// We do that by checking if the typeof window is defined. If it is, then it means that a window exists and, as such, that we are in a browser environment.\n// If not, it means that we are running outside of a browser and, as such, our code is running on the server.\n// In the case that we are not in the browser or Metamask is not running, then we need to setup our own provider, through Infura (which connects us to a node within the ETH network).\n\n//the first condition will check for the existence of a browser. The second condition checks if web3 is in the window (which means Metamask is in place).\nif (typeof window !== \"undefined\" && typeof window.web3 !== \"undefined\") {\n  //We are in the browser and Metamask is running\n  const web3BrowserProvider = window.web3.currentProvider;\n\n  const provider = new Web3.providers.HttpProvider(\"http://127.0.0.1:7545\");\n  // Due to Metamask's new scurity measures we first need to enable the provider before instantiating web3 with it\n  const getProvider = async () => {\n    await web3BrowserProvider.enable(); // request authentication\n  };\n  getProvider();\n  const OPTIONS = {\n    defaultBlock: \"latest\",\n    transactionConfirmationBlocks: 1,\n    transactionBlockTimeout: 5\n  };\n\n  web3 = new Web3(provider, null, OPTIONS);\n} else {\n  // We are not in the browser or Metamask is not running.\n  // We need to set up our own provider, using the Rinkeby Eth network, through Infura (using the link that we were provided with).\n  const web3ServerProvider = new Web3.providers.HttpProvider(\n    \"https://rinkeby.infura.io/v3/c8d80c1c979446a7b1b3ebe2f3729ec9\"\n  );\n\n  const provider = new Web3.providers.HttpProvider(\"http://127.0.0.1:7545\");\n  const OPTIONS = {\n    defaultBlock: \"latest\",\n    transactionConfirmationBlocks: 1,\n    transactionBlockTimeout: 5\n  };\n  web3 = new Web3(provider, null, OPTIONS);\n  // web3 = new Web3(web3ServerProvider);\n}\n// const web3 = new Web3(window.web3.currentProvider);\n\nexport default web3;\n","import React, { Component } from \"react\";\nimport LoginForm from \"../components/LoginForm\";\nimport Head from \"next/head\";\n\nexport default class Login extends Component {\n  render() {\n    return (\n      <div>\n        <link\n          rel=\"stylesheet\"\n          href=\"//cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.2.12/semantic.min.css\"\n        />\n        <LoginForm login={this.props.login} />\n      </div>\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;;;;;;AACA;AAAA;AAGA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAGA;AAAA;AAAA;AAJA;AAQA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAKA;AAAA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AAAA;AAAA;AACA;AACA;AACA;AAJA;AAWA;;;;AA1DA;AACA;;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAFA;AALA;AAaA;AACA;AAEA;AACA;AAGA;AACA;AAFA;AAKA;AAAA;AAAA;AAVA;AAeA;AACA;;;;;;;;;;;;ACtCA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAKA;;;;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChDA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AACA;AAGA;AACA;AAFA;AAIA;AAAA;AAGA;;;;AAXA;AACA;;;;;A","sourceRoot":""}