{"version":3,"file":"static/webpack/static/development/pages/myprofile.js.3138a17e54b3a8362cb3.hot-update.js","sources":["webpack:///./components/UserProfileEditForm.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Button, FormGroup, Message } from \"semantic-ui-react\";\n\nexport default class UserProfileEditForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: null\n    };\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    let user;\n    let newFirstName;\n    let newLastName;\n    let newEmail;\n\n    if (\n      e.target.password.value !== \"\" &&\n      e.target.password.value !== e.target.passwordConfirmation.value\n    ) {\n      this.setState({ error: \"The passwords do not match\" });\n      return null;\n    }\n\n    if (e.target.firstName.value === \"\") {\n      newFirstName = this.props.userData.first_name;\n    } else {\n      newFirstName = e.target.firstName.value;\n    }\n\n    if (e.target.lastName.value === \"\") {\n      newLastName = this.props.userData.last_name;\n    } else {\n      newLastName = e.target.lastName.value;\n    }\n\n    if (e.target.email.value === \"\") {\n      newEmail = this.props.userData.email;\n    } else {\n      newEmail = e.target.email.value;\n    }\n\n    if (e.target.password.value !== \"\") {\n      user = {\n        first_name: newFirstName,\n        last_name: newLastName,\n        email: newEmail,\n        password: e.target.password.value\n      };\n    } else {\n      user = {\n        first_name: newFirstName,\n        last_name: newLastName,\n        email: newEmail\n      };\n    }\n\n    const editUserURL = `http://localhost:3000/users/${this.props.userData.id}`;\n    const options = {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({ user })\n    };\n\n    return fetch(editUserURL, options).then(resp => {\n      resp.json();\n      this.props.updateUserData(FirstName, newLastName, newEmail);\n      this.props.edit();\n    });\n  };\n\n  render() {\n    return (\n      <Form onSubmit={e => this.handleSubmit(e)}>\n        <Form.Group widths=\"equal\">\n          <Form.Field>\n            <label>First Name</label>\n            <input\n              name=\"firstName\"\n              placeholder={this.props.userData.first_name}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Last Name</label>\n            <input\n              name=\"lastName\"\n              placeholder={this.props.userData.last_name}\n            />\n          </Form.Field>\n        </Form.Group>\n        <Form.Field>\n          <label>Email</label>\n          <input name=\"email\" placeholder={this.props.userData.email} />\n        </Form.Field>\n        <Form.Group widths=\"equal\">\n          <Form.Field>\n            <label>New Password</label>\n            <input name=\"password\" type=\"password\" />\n          </Form.Field>\n          <Form.Field>\n            <label>New Password Confirmation</label>\n            <input name=\"passwordConfirmation\" type=\"password\" />\n          </Form.Field>\n        </Form.Group>\n        <Message\n          visible={this.state.error}\n          error\n          content=\"The passwords do not match.\"\n        />\n        <Button type=\"submit\">Edit Profile</Button>\n      </Form>\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AASA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AALA;AAQA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AArEA;AACA;AADA;AAHA;AAMA;AACA;;;AAkEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAIA;AACA;AAFA;AAQA;AACA;AAFA;AAQA;AAAA;AAAA;AAEA;AAAA;AAGA;AAAA;AAAA;AAIA;AAAA;AAAA;AAIA;AACA;AACA;AAHA;AAKA;AAAA;AAGA;;;;AAnHA;AACA;;;;;A","sourceRoot":""}